;----------------------------------------------------------------------------
; Project MD
; Copyright 2012 Javier Degirolmo
;
; This file is part of Project MD.
;
; Project MD is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; Project MD is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with Project MD.  If not, see <http://www.gnu.org/licenses/>.
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------

;--------------------------------------------------;
; RunDJump                                         ;
;                                                  ;
; Game logic code for double jump power-up objects ;
;--------------------------------------------------;

RunDJump:

;-------------------;
; Are we outbounds? ;
;-------------------;

    move.w  Object_X(a0), d0
    sub.w   (RAM_Scroll), d0
    cmp.w   #0-$40, d0
    blt.s   @Outbounds
    cmp.w   #320+$40, d0
    ble.s   @CheckCol

@Outbounds:
    bra     DeleteObject

;-----------------------------------;
; Are we colliding with the player? ;
;-----------------------------------;

@CheckCol
    move.w  Object_X(a0), d0
    move.w  Player_X(a3), d1
    addq.w  #8, d0
    addq.w  #3, d1
    cmp.w   d0, d1
    blt.s   @End

    add.w   #15, d0
    subq.w  #7, d1
    cmp.w   d0, d1
    bgt.s   @End

    move.w  Object_Y(a0), d0
    move.w  Player_Y(a3), d1
    addq.w  #8, d0
    cmp.w   d0, d1
    blt.s   @End

    add.w   #15, d0
    sub.w   #31, d1
    cmp.w   d0, d1
    bgt.s   @End

;----------------------;
; Reward some score :) ;
;----------------------;

    move.l  #Score_Powerup, d0
    bsr     AddScore

;-----------------------;
; Make player transform ;
;-----------------------;

    move.b  Player_Power(a3), Player_OldPower(a3)
    move.b  #PlayerPow_DJump, Player_Power(a3)
    move.b  Player_PowerTime(a3), Player_PowerDelay(a3)

;----------;
; Play SFX ;
;----------;

    move.b  #SFX_PowerUp, (RAM_SFXToPlay)

;-----------------------------;
; We're taken, commit suicide ;
;-----------------------------;

    bra     DeleteObjectPermanent

;-------------------;
; End of subroutine ;
;-------------------;

@End:
    rts

;----------------------------------------------------------------------------
