;----------------------------------------------------------------------------
; Project MD
; Copyright 2012 Javier Degirolmo
;
; This file is part of Project MD.
;
; Project MD is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; Project MD is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with Project MD.  If not, see <http://www.gnu.org/licenses/>.
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------

;---------------------------------------------------;
; InitLevel_Waterlava                               ;
;                                                   ;
; Initializes stuff specific to the Waterlava level ;
;---------------------------------------------------;
; BREAKS: d6, d7, a5, a6                            ;
;---------------------------------------------------;

InitLevel_Waterlava:

;------------------------------;
; Load level-specific graphics ;
;------------------------------;

    FixedDMA Gfx_LevelWaterlava_Platform, VRAM_Platform*$20, 8*$20
    FixedDMA Gfx_WLTeleporter, VRAM_WLTeleporter*$20, 8*$20
    FixedDMA Gfx_WLIceFloor, VRAM_WLIceFloor*$20, 4*2*$20
    FixedDMA Gfx_TrollWalk, VRAM_TrollWalk*$20, 16*$20
    FixedDMA Gfx_TrollDead, VRAM_TrollDead*$20, 16*$20
    FixedDMA Gfx_LavaBatFly, VRAM_DblCircleFly*$20, $10*$20
    FixedDMA Gfx_Stalactite, VRAM_Stalactite*$20, 8*2*$20

;-----------------------------------;
; Clear the plane B tilemap for now ;
;-----------------------------------;

    move.l  #$60000003, ($C00004)
    lea     ($C00000), a6
    moveq   #0, d6
    moveq   #((64*28)/16)-1, d7
@ClearBG:
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    move.l  d6, (a6)
    dbf     d7, @ClearBG

;-------------------;
; End of subroutine ;
;-------------------;

    rts

;----------------------------------------------------------------------------
